AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  InstanceType:
    Type: String
    Description: EC2 instance type for the API server
  APIImageDigest:
    Type: String
    Description: Digest of the API server image
  APIImageDigestQA:
    Type: String
    Description: Digest of the API server image for QA
  PublicKeyMaterial:
    Type: String
    Description: Public key material for the EC2 key pair
  MyIPAddress:
    Description: The IP address of the client that will be allowed to SSH into the EC2 instance
    Type: String
  HostedZoneId:
    Type: String
    Description: The ID of the Route 53 hosted zone
  HostedZoneName:
    Type: String
    Description: The name of the Route 53 hosted zone
  APIHostName:
    Type: String
    Description: The hostname of the API server
  APIHostNameQA:
    Type: String
    Description: The hostname of the API server
  InfluxHostName:
    Type: String
    Description: The hostname of the InfluxDB server
  GrafanaHostName:
    Type: String
    Description: The hostname of the Grafana server
  CookieDomain:
    Type: String
    Description: The domain name for the cookie
  EmailDomain:
    Type: String
    Description: The email domain for SES
  AppHost:
    Type: String
    Description: The host name of the application

Resources:
  ECSInstanceAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn:
      - GatewayAttachment
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref ECSInstanceLaunchTemplate
        Version: !GetAtt ECSInstanceLaunchTemplate.LatestVersionNumber
      DesiredCapacity: 1
      MinSize: 0
      MaxSize: 1
      HealthCheckType: EBS
      VPCZoneIdentifier:
        - !Ref PublicSubnet

  ECSInstanceLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${AWS::StackName}-launch-template
      LaunchTemplateData:
        ImageId: !Sub "{{resolve:ssm:/aws/service/ecs/optimized-ami/amazon-linux-2023/arm64/recommended/image_id}}"
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyPair
        SecurityGroupIds:
          - !GetAtt APISecurityGroup.GroupId
          - !GetAtt SSHSecurityGroup.GroupId
        IamInstanceProfile:
          Arn: !GetAtt IAMInstanceProfile.Arn
        UserData:
          Fn::Base64:
            !Sub |
            #!/bin/bash -ex

            handle_error() {
              shutdown -h now
            }

            trap 'handle_error' ERR

            # Get the instance ID
            TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 10")
            INSTANCE_ID=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/instance-id)

            # Attach the EBS volume
            aws ec2 attach-volume --volume-id ${PersistentVolume} --instance-id $INSTANCE_ID --device /dev/xvdf
            while [ ! -e /dev/nvme1n1 ]; do sleep 1; done
            mkdir -p /ebs/persistent
            mount /dev/nvme1n1 /ebs/persistent

            # Create the grafana data directory
            cp -R /ebs/persistent/grafana/ /opt/grafana
            chown -R 472:472 /opt/grafana

            # Create the influxdb data directory
            cp -R /ebs/persistent/influxdb /opt/influxdb

            # Associate the instance with the Elastic IP address
            aws ec2 associate-address --public-ip ${ElasticIP} --instance-id $INSTANCE_ID

  InstanceProfileRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      Policies:
        - PolicyName: EC2AddressAssociation
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AssociateAddress
                Resource: "*"
        - PolicyName: EC2VolumeAttachment
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AttachVolume
                Resource: "*"
        - PolicyName: ECRPush
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:PutImage
                Resource: "*"

  IAMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceProfileRole

  APISecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the API server
      VpcId: !Ref BackendVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the SSH server
      VpcId: !Ref BackendVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIPAddress

  KeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: !Sub ${AWS::StackName}-keypair
      PublicKeyMaterial: !Ref PublicKeyMaterial

  ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  BackendVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref BackendVPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref BackendVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs "" ]

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref BackendVPC

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  BackendContainerRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${AWS::StackName}-api
      EmptyOnDelete: true

  PersistentVolume:
    Type: AWS::EC2::Volume
    DeletionPolicy: Retain
    Properties:
      AvailabilityZone: !GetAtt PublicSubnet.AvailabilityZone
      VolumeType: gp3
      Size: 1
      Iops: 3000