services:
  traefik:
    image: traefik:v2.10
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.local.yml:/etc/traefik/traefik.yml
      - ./traefik/dynamic_conf.local.yml:/etc/traefik/dynamic_conf.yml
      - ./traefik/certificates:/opt/certificates
    labels:
      - "traefik.http.middlewares.headers-cors.headers.accesscontrolalloworiginlist=https://app.beddybytes.local,https://beddybytes.local"
      - "traefik.http.middlewares.headers-cors.headers.accesscontrolallowheaders=Content-Type,Authorization"
      - "traefik.http.middlewares.headers-cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.headers-cors.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT,DELETE"
    networks:
      default:
        aliases:
          - app.beddybytes.local
          - api.beddybytes.local
          - influx.beddybytes.local
          - grafana.beddybytes.local
  api:
    image: beddybytes-api
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - 9000
    volumes:
      - ./eventlog:/opt/eventlog
    environment:
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - COOKIE_DOMAIN=.beddybytes.local
      - SERVER_ADDR=:9000
      - FILE_EVENT_LOG_FOLDER_PATH=/opt/eventlog
    labels:
      - "traefik.http.routers.api.rule=Host(`api.beddybytes.local`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.middlewares=headers-cors@docker"
    develop:
      watch:
        - action: rebuild
          path: ./backend
  app:
    image: node:18
    command: yarn start
    restart: always
    ports:
      - 3000
    volumes:
      - ./frontend/:/opt/app
    environment:
      - WDS_SOCKET_HOST=app.beddybytes.local
      - WDS_SOCKET_PORT=443
    working_dir: /opt/app
    labels:
      - "traefik.http.routers.app.rule=Host(`app.beddybytes.local`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls=true"
  marketing:
    image: node:18
    command: npm run develop
    restart: always
    ports:
      - 8000
    volumes:
      - ./marketing/:/opt/marketing
    working_dir: /opt/marketing
    labels:
      - "traefik.http.routers.marketing.rule=Host(`beddybytes.local`)"
      - "traefik.http.routers.marketing.entrypoints=websecure"
      - "traefik.http.routers.marketing.tls=true"
  influxdb:
    image: influxdb:2.7-alpine
    restart: always
    ports:
      - 8086
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
    labels:
      - "traefik.http.routers.influx.rule=Host(`influx.beddybytes.local`)"
      - "traefik.http.routers.influx.entrypoints=websecure"
      - "traefik.http.routers.influx.tls=true"
      - "traefik.http.routers.influx.middlewares=headers-cors@docker"
  grafana:
    image: grafana/grafana-oss:10.2.2
    restart: always
    ports:
      - 3000
    volumes:
      - grafana_storage:/var/lib/grafana
    labels:
      - "traefik.http.routers.grafana.rule=Host(`grafana.beddybytes.local`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.middlewares=headers-cors@docker"
  selenium_hub:
    image: selenium/hub:4.11.0-20230801
    restart: always
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"
  # selenium_firefox_node:
  #   image: selenium/node-firefox:4.11.0-20230801
  #   restart: always
  #   depends_on:
  #     - selenium_hub
  #   environment:
  #     - SE_EVENT_BUS_HOST=selenium_hub
  #     - SE_EVENT_BUS_PUBLISH_PORT=4442
  #     - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
  selenium_chrome_node:
    # port 7900 for VNC password is "secret"
    image: selenium/node-chrome:4.11.0-20230801
    restart: always
    depends_on:
      - selenium_hub
    environment:
      - SE_EVENT_BUS_HOST=selenium_hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    deploy:
      replicas: 4

volumes:
  # TODO influx_storage + set up script
  grafana_storage:

secrets:
  ENCRYPTION_KEY:
    external: true
